// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.75.3.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'bridge_generated.dart';
export 'bridge_generated.dart';

class VodozemacBindingsDartPlatform extends FlutterRustBridgeBase<VodozemacBindingsDartWire>
    with FlutterRustBridgeSetupMixin {
  VodozemacBindingsDartPlatform(FutureOr<WasmModule> dylib) : super(VodozemacBindingsDartWire(dylib)) {
    setupMixinConstructor();
  }
  Future<void> setup() => inner.init;

// Section: api2wire

  @protected
  Object api2wire_Curve25519PublicKey(Curve25519PublicKey raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_Ed25519PublicKey(Ed25519PublicKey raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_Ed25519Signature(Ed25519Signature raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_MegolmSessionConfig(MegolmSessionConfig raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_OlmMessage(OlmMessage raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_OlmSessionConfig(OlmSessionConfig raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_RwLockGroupSession(RwLockGroupSession raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_RwLockInboundGroupSession(RwLockInboundGroupSession raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_RwLockSession(RwLockSession raw) {
    return raw.shareOrMove();
  }

  @protected
  Object api2wire_StdSyncRwLockAccount(StdSyncRwLockAccount raw) {
    return raw.shareOrMove();
  }

  @protected
  String api2wire_String(String raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_account(VodozemacAccount raw) {
    return api2wire_vodozemac_account(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_curve_25519_public_key(VodozemacCurve25519PublicKey raw) {
    return api2wire_vodozemac_curve_25519_public_key(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey raw) {
    return api2wire_vodozemac_ed_25519_public_key(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_ed_25519_signature(VodozemacEd25519Signature raw) {
    return api2wire_vodozemac_ed_25519_signature(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_group_session(VodozemacGroupSession raw) {
    return api2wire_vodozemac_group_session(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_inbound_group_session(VodozemacInboundGroupSession raw) {
    return api2wire_vodozemac_inbound_group_session(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_megolm_session_config(VodozemacMegolmSessionConfig raw) {
    return api2wire_vodozemac_megolm_session_config(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_olm_message(VodozemacOlmMessage raw) {
    return api2wire_vodozemac_olm_message(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_olm_session_config(VodozemacOlmSessionConfig raw) {
    return api2wire_vodozemac_olm_session_config(raw);
  }

  @protected
  List<dynamic> api2wire_box_autoadd_vodozemac_session(VodozemacSession raw) {
    return api2wire_vodozemac_session(raw);
  }

  @protected
  Uint8List api2wire_u8_array_32(U8Array32 raw) {
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List api2wire_u8_array_64(U8Array64 raw) {
    return Uint8List.fromList(raw);
  }

  @protected
  Uint8List api2wire_uint_8_list(Uint8List raw) {
    return raw;
  }

  @protected
  List<dynamic> api2wire_vodozemac_account(VodozemacAccount raw) {
    return [api2wire_StdSyncRwLockAccount(raw.account)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_curve_25519_public_key(VodozemacCurve25519PublicKey raw) {
    return [api2wire_Curve25519PublicKey(raw.key)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey raw) {
    return [api2wire_Ed25519PublicKey(raw.key)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_ed_25519_signature(VodozemacEd25519Signature raw) {
    return [api2wire_Ed25519Signature(raw.signature)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_group_session(VodozemacGroupSession raw) {
    return [api2wire_RwLockGroupSession(raw.session)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_inbound_group_session(VodozemacInboundGroupSession raw) {
    return [api2wire_RwLockInboundGroupSession(raw.session)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_megolm_session_config(VodozemacMegolmSessionConfig raw) {
    return [api2wire_MegolmSessionConfig(raw.config)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_olm_message(VodozemacOlmMessage raw) {
    return [api2wire_OlmMessage(raw.msg)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_olm_session_config(VodozemacOlmSessionConfig raw) {
    return [api2wire_OlmSessionConfig(raw.config)];
  }

  @protected
  List<dynamic> api2wire_vodozemac_session(VodozemacSession raw) {
    return [api2wire_RwLockSession(raw.session)];
  }
// Section: finalizer

  late final Finalizer<PlatformPointer> _Curve25519PublicKeyFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_Curve25519PublicKey);
  Finalizer<PlatformPointer> get Curve25519PublicKeyFinalizer => _Curve25519PublicKeyFinalizer;
  late final Finalizer<PlatformPointer> _Ed25519PublicKeyFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_Ed25519PublicKey);
  Finalizer<PlatformPointer> get Ed25519PublicKeyFinalizer => _Ed25519PublicKeyFinalizer;
  late final Finalizer<PlatformPointer> _Ed25519SignatureFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_Ed25519Signature);
  Finalizer<PlatformPointer> get Ed25519SignatureFinalizer => _Ed25519SignatureFinalizer;
  late final Finalizer<PlatformPointer> _MegolmSessionConfigFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_MegolmSessionConfig);
  Finalizer<PlatformPointer> get MegolmSessionConfigFinalizer => _MegolmSessionConfigFinalizer;
  late final Finalizer<PlatformPointer> _OlmMessageFinalizer = Finalizer<PlatformPointer>(inner.drop_opaque_OlmMessage);
  Finalizer<PlatformPointer> get OlmMessageFinalizer => _OlmMessageFinalizer;
  late final Finalizer<PlatformPointer> _OlmSessionConfigFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_OlmSessionConfig);
  Finalizer<PlatformPointer> get OlmSessionConfigFinalizer => _OlmSessionConfigFinalizer;
  late final Finalizer<PlatformPointer> _RwLockGroupSessionFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_RwLockGroupSession);
  Finalizer<PlatformPointer> get RwLockGroupSessionFinalizer => _RwLockGroupSessionFinalizer;
  late final Finalizer<PlatformPointer> _RwLockInboundGroupSessionFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_RwLockInboundGroupSession);
  Finalizer<PlatformPointer> get RwLockInboundGroupSessionFinalizer => _RwLockInboundGroupSessionFinalizer;
  late final Finalizer<PlatformPointer> _RwLockSessionFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_RwLockSession);
  Finalizer<PlatformPointer> get RwLockSessionFinalizer => _RwLockSessionFinalizer;
  late final Finalizer<PlatformPointer> _StdSyncRwLockAccountFinalizer =
      Finalizer<PlatformPointer>(inner.drop_opaque_StdSyncRwLockAccount);
  Finalizer<PlatformPointer> get StdSyncRwLockAccountFinalizer => _StdSyncRwLockAccountFinalizer;
}

// Section: WASM wire module

@JS('wasm_bindgen')
external VodozemacBindingsDartWasmModule get wasmModule;

@JS()
@anonymous
class VodozemacBindingsDartWasmModule implements WasmModule {
  external Object /* Promise */ call([String? moduleName]);
  external VodozemacBindingsDartWasmModule bind(dynamic thisArg, String moduleName);
  external dynamic /* int */ wire_version__method__VodozemacMegolmSessionConfig(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_version_1__static_method__VodozemacMegolmSessionConfig();

  external dynamic /* List<dynamic> */ wire_version_2__static_method__VodozemacMegolmSessionConfig();

  external dynamic /* List<dynamic> */ wire_def__static_method__VodozemacMegolmSessionConfig();

  external dynamic /* void */ wire_new__static_method__VodozemacGroupSession(
      NativePortType port_, List<dynamic> config);

  external dynamic /* String */ wire_session_id__method__VodozemacGroupSession(List<dynamic> that);

  external dynamic /* int */ wire_message_index__method__VodozemacGroupSession(List<dynamic> that);

  external dynamic /* void */ wire_session_config__method__VodozemacGroupSession(
      NativePortType port_, List<dynamic> that);

  external dynamic /* void */ wire_encrypt__method__VodozemacGroupSession(
      NativePortType port_, List<dynamic> that, String plaintext);

  external dynamic /* void */ wire_session_key__method__VodozemacGroupSession(NativePortType port_, List<dynamic> that);

  external dynamic /* void */ wire_pickle_encrypted__method__VodozemacGroupSession(
      NativePortType port_, List<dynamic> that, Uint8List pickle_key);

  external dynamic /* void */ wire_from_pickle_encrypted__static_method__VodozemacGroupSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* void */ wire_from_olm_pickle_encrypted__static_method__VodozemacGroupSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* List<dynamic> */ wire_to_inbound__method__VodozemacGroupSession(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_new__static_method__VodozemacInboundGroupSession(
      String session_key, List<dynamic> config);

  external dynamic /* String */ wire_session_id__method__VodozemacInboundGroupSession(List<dynamic> that);

  external dynamic /* int */ wire_first_known_index__method__VodozemacInboundGroupSession(List<dynamic> that);

  external dynamic /* void */ wire_decrypt__method__VodozemacInboundGroupSession(
      NativePortType port_, List<dynamic> that, String encrypted);

  external dynamic /* void */ wire_pickle_encrypted__method__VodozemacInboundGroupSession(
      NativePortType port_, List<dynamic> that, Uint8List pickle_key);

  external dynamic /* void */ wire_from_pickle_encrypted__static_method__VodozemacInboundGroupSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* void */ wire_from_olm_pickle_encrypted__static_method__VodozemacInboundGroupSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* List<dynamic> */ wire_import__static_method__VodozemacInboundGroupSession(
      String session_key, List<dynamic> config);

  external dynamic /* String */ wire_export_at_first_known_index__method__VodozemacInboundGroupSession(
      List<dynamic> that);

  external dynamic /* String? */ wire_export_at__method__VodozemacInboundGroupSession(List<dynamic> that, int index);

  external dynamic /* int */ wire_version__method__VodozemacOlmSessionConfig(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_version_1__static_method__VodozemacOlmSessionConfig();

  external dynamic /* List<dynamic> */ wire_version_2__static_method__VodozemacOlmSessionConfig();

  external dynamic /* List<dynamic> */ wire_def__static_method__VodozemacOlmSessionConfig();

  external dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacEd25519Signature(Uint8List bytes);

  external dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacEd25519Signature(String signature);

  external dynamic /* String */ wire_to_base64__method__VodozemacEd25519Signature(List<dynamic> that);

  external dynamic /* Uint8List */ wire_to_bytes__method__VodozemacEd25519Signature(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacEd25519PublicKey(Uint8List bytes);

  external dynamic /* Uint8List */ wire_as_bytes__method__VodozemacEd25519PublicKey(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacEd25519PublicKey(String base64_key);

  external dynamic /* String */ wire_to_base64__method__VodozemacEd25519PublicKey(List<dynamic> that);

  external dynamic /* void */ wire_verify__method__VodozemacEd25519PublicKey(
      NativePortType port_, List<dynamic> that, String message, List<dynamic> signature);

  external dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacCurve25519PublicKey(Uint8List bytes);

  external dynamic /* Uint8List */ wire_as_bytes__method__VodozemacCurve25519PublicKey(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacCurve25519PublicKey(String base64_key);

  external dynamic /* String */ wire_to_base64__method__VodozemacCurve25519PublicKey(List<dynamic> that);

  external dynamic /* int */ wire_message_type__method__VodozemacOlmMessage(List<dynamic> that);

  external dynamic /* String */ wire_message__method__VodozemacOlmMessage(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_from_parts__static_method__VodozemacOlmMessage(
      int message_type, String ciphertext);

  external dynamic /* String */ wire_session_id__method__VodozemacSession(List<dynamic> that);

  external dynamic /* bool */ wire_has_received_message__method__VodozemacSession(List<dynamic> that);

  external dynamic /* void */ wire_encrypt__method__VodozemacSession(
      NativePortType port_, List<dynamic> that, String plaintext);

  external dynamic /* void */ wire_decrypt__method__VodozemacSession(
      NativePortType port_, List<dynamic> that, List<dynamic> message);

  external dynamic /* void */ wire_pickle_encrypted__method__VodozemacSession(
      NativePortType port_, List<dynamic> that, Uint8List pickle_key);

  external dynamic /* void */ wire_from_pickle_encrypted__static_method__VodozemacSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* void */ wire_from_olm_pickle_encrypted__static_method__VodozemacSession(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* void */ wire_session_config__method__VodozemacSession(NativePortType port_, List<dynamic> that);

  external dynamic /* void */ wire_new__static_method__VodozemacAccount(NativePortType port_);

  external dynamic /* int */ wire_max_number_of_one_time_keys__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* void */ wire_generate_fallback_key__method__VodozemacAccount(
      NativePortType port_, List<dynamic> that);

  external dynamic /* bool */ wire_forget_fallback_key__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* void */ wire_generate_one_time_keys__method__VodozemacAccount(
      NativePortType port_, List<dynamic> that, int count);

  external dynamic /* void */ wire_mark_keys_as_published__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_ed25519_key__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_curve25519_key__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_identity_keys__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_one_time_keys__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* List<dynamic> */ wire_fallback_key__method__VodozemacAccount(List<dynamic> that);

  external dynamic /* void */ wire_sign__method__VodozemacAccount(
      NativePortType port_, List<dynamic> that, String message);

  external dynamic /* void */ wire_create_outbound_session__method__VodozemacAccount(NativePortType port_,
      List<dynamic> that, List<dynamic> config, List<dynamic> identity_key, List<dynamic> one_time_key);

  external dynamic /* void */ wire_create_inbound_session__method__VodozemacAccount(
      NativePortType port_, List<dynamic> that, List<dynamic> their_identity_key, String pre_key_message_base64);

  external dynamic /* void */ wire_pickle_encrypted__method__VodozemacAccount(
      NativePortType port_, List<dynamic> that, Uint8List pickle_key);

  external dynamic /* void */ wire_from_pickle_encrypted__static_method__VodozemacAccount(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /* void */ wire_from_olm_pickle_encrypted__static_method__VodozemacAccount(
      NativePortType port_, String pickle, Uint8List pickle_key);

  external dynamic /*  */ drop_opaque_Curve25519PublicKey(ptr);

  external int /* *const c_void */ share_opaque_Curve25519PublicKey(ptr);

  external dynamic /*  */ drop_opaque_Ed25519PublicKey(ptr);

  external int /* *const c_void */ share_opaque_Ed25519PublicKey(ptr);

  external dynamic /*  */ drop_opaque_Ed25519Signature(ptr);

  external int /* *const c_void */ share_opaque_Ed25519Signature(ptr);

  external dynamic /*  */ drop_opaque_MegolmSessionConfig(ptr);

  external int /* *const c_void */ share_opaque_MegolmSessionConfig(ptr);

  external dynamic /*  */ drop_opaque_OlmMessage(ptr);

  external int /* *const c_void */ share_opaque_OlmMessage(ptr);

  external dynamic /*  */ drop_opaque_OlmSessionConfig(ptr);

  external int /* *const c_void */ share_opaque_OlmSessionConfig(ptr);

  external dynamic /*  */ drop_opaque_RwLockGroupSession(ptr);

  external int /* *const c_void */ share_opaque_RwLockGroupSession(ptr);

  external dynamic /*  */ drop_opaque_RwLockInboundGroupSession(ptr);

  external int /* *const c_void */ share_opaque_RwLockInboundGroupSession(ptr);

  external dynamic /*  */ drop_opaque_RwLockSession(ptr);

  external int /* *const c_void */ share_opaque_RwLockSession(ptr);

  external dynamic /*  */ drop_opaque_StdSyncRwLockAccount(ptr);

  external int /* *const c_void */ share_opaque_StdSyncRwLockAccount(ptr);
}

// Section: WASM wire connector

class VodozemacBindingsDartWire extends FlutterRustBridgeWasmWireBase<VodozemacBindingsDartWasmModule> {
  VodozemacBindingsDartWire(FutureOr<WasmModule> module)
      : super(WasmModule.cast<VodozemacBindingsDartWasmModule>(module));

  dynamic /* int */ wire_version__method__VodozemacMegolmSessionConfig(List<dynamic> that) =>
      wasmModule.wire_version__method__VodozemacMegolmSessionConfig(that);

  dynamic /* List<dynamic> */ wire_version_1__static_method__VodozemacMegolmSessionConfig() =>
      wasmModule.wire_version_1__static_method__VodozemacMegolmSessionConfig();

  dynamic /* List<dynamic> */ wire_version_2__static_method__VodozemacMegolmSessionConfig() =>
      wasmModule.wire_version_2__static_method__VodozemacMegolmSessionConfig();

  dynamic /* List<dynamic> */ wire_def__static_method__VodozemacMegolmSessionConfig() =>
      wasmModule.wire_def__static_method__VodozemacMegolmSessionConfig();

  void wire_new__static_method__VodozemacGroupSession(NativePortType port_, List<dynamic> config) =>
      wasmModule.wire_new__static_method__VodozemacGroupSession(port_, config);

  dynamic /* String */ wire_session_id__method__VodozemacGroupSession(List<dynamic> that) =>
      wasmModule.wire_session_id__method__VodozemacGroupSession(that);

  dynamic /* int */ wire_message_index__method__VodozemacGroupSession(List<dynamic> that) =>
      wasmModule.wire_message_index__method__VodozemacGroupSession(that);

  void wire_session_config__method__VodozemacGroupSession(NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_session_config__method__VodozemacGroupSession(port_, that);

  void wire_encrypt__method__VodozemacGroupSession(NativePortType port_, List<dynamic> that, String plaintext) =>
      wasmModule.wire_encrypt__method__VodozemacGroupSession(port_, that, plaintext);

  void wire_session_key__method__VodozemacGroupSession(NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_session_key__method__VodozemacGroupSession(port_, that);

  void wire_pickle_encrypted__method__VodozemacGroupSession(
          NativePortType port_, List<dynamic> that, Uint8List pickle_key) =>
      wasmModule.wire_pickle_encrypted__method__VodozemacGroupSession(port_, that, pickle_key);

  void wire_from_pickle_encrypted__static_method__VodozemacGroupSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_pickle_encrypted__static_method__VodozemacGroupSession(port_, pickle, pickle_key);

  void wire_from_olm_pickle_encrypted__static_method__VodozemacGroupSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_olm_pickle_encrypted__static_method__VodozemacGroupSession(port_, pickle, pickle_key);

  dynamic /* List<dynamic> */ wire_to_inbound__method__VodozemacGroupSession(List<dynamic> that) =>
      wasmModule.wire_to_inbound__method__VodozemacGroupSession(that);

  dynamic /* List<dynamic> */ wire_new__static_method__VodozemacInboundGroupSession(
          String session_key, List<dynamic> config) =>
      wasmModule.wire_new__static_method__VodozemacInboundGroupSession(session_key, config);

  dynamic /* String */ wire_session_id__method__VodozemacInboundGroupSession(List<dynamic> that) =>
      wasmModule.wire_session_id__method__VodozemacInboundGroupSession(that);

  dynamic /* int */ wire_first_known_index__method__VodozemacInboundGroupSession(List<dynamic> that) =>
      wasmModule.wire_first_known_index__method__VodozemacInboundGroupSession(that);

  void wire_decrypt__method__VodozemacInboundGroupSession(NativePortType port_, List<dynamic> that, String encrypted) =>
      wasmModule.wire_decrypt__method__VodozemacInboundGroupSession(port_, that, encrypted);

  void wire_pickle_encrypted__method__VodozemacInboundGroupSession(
          NativePortType port_, List<dynamic> that, Uint8List pickle_key) =>
      wasmModule.wire_pickle_encrypted__method__VodozemacInboundGroupSession(port_, that, pickle_key);

  void wire_from_pickle_encrypted__static_method__VodozemacInboundGroupSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_pickle_encrypted__static_method__VodozemacInboundGroupSession(port_, pickle, pickle_key);

  void wire_from_olm_pickle_encrypted__static_method__VodozemacInboundGroupSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_olm_pickle_encrypted__static_method__VodozemacInboundGroupSession(port_, pickle, pickle_key);

  dynamic /* List<dynamic> */ wire_import__static_method__VodozemacInboundGroupSession(
          String session_key, List<dynamic> config) =>
      wasmModule.wire_import__static_method__VodozemacInboundGroupSession(session_key, config);

  dynamic /* String */ wire_export_at_first_known_index__method__VodozemacInboundGroupSession(List<dynamic> that) =>
      wasmModule.wire_export_at_first_known_index__method__VodozemacInboundGroupSession(that);

  dynamic /* String? */ wire_export_at__method__VodozemacInboundGroupSession(List<dynamic> that, int index) =>
      wasmModule.wire_export_at__method__VodozemacInboundGroupSession(that, index);

  dynamic /* int */ wire_version__method__VodozemacOlmSessionConfig(List<dynamic> that) =>
      wasmModule.wire_version__method__VodozemacOlmSessionConfig(that);

  dynamic /* List<dynamic> */ wire_version_1__static_method__VodozemacOlmSessionConfig() =>
      wasmModule.wire_version_1__static_method__VodozemacOlmSessionConfig();

  dynamic /* List<dynamic> */ wire_version_2__static_method__VodozemacOlmSessionConfig() =>
      wasmModule.wire_version_2__static_method__VodozemacOlmSessionConfig();

  dynamic /* List<dynamic> */ wire_def__static_method__VodozemacOlmSessionConfig() =>
      wasmModule.wire_def__static_method__VodozemacOlmSessionConfig();

  dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacEd25519Signature(Uint8List bytes) =>
      wasmModule.wire_from_slice__static_method__VodozemacEd25519Signature(bytes);

  dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacEd25519Signature(String signature) =>
      wasmModule.wire_from_base64__static_method__VodozemacEd25519Signature(signature);

  dynamic /* String */ wire_to_base64__method__VodozemacEd25519Signature(List<dynamic> that) =>
      wasmModule.wire_to_base64__method__VodozemacEd25519Signature(that);

  dynamic /* Uint8List */ wire_to_bytes__method__VodozemacEd25519Signature(List<dynamic> that) =>
      wasmModule.wire_to_bytes__method__VodozemacEd25519Signature(that);

  dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacEd25519PublicKey(Uint8List bytes) =>
      wasmModule.wire_from_slice__static_method__VodozemacEd25519PublicKey(bytes);

  dynamic /* Uint8List */ wire_as_bytes__method__VodozemacEd25519PublicKey(List<dynamic> that) =>
      wasmModule.wire_as_bytes__method__VodozemacEd25519PublicKey(that);

  dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacEd25519PublicKey(String base64_key) =>
      wasmModule.wire_from_base64__static_method__VodozemacEd25519PublicKey(base64_key);

  dynamic /* String */ wire_to_base64__method__VodozemacEd25519PublicKey(List<dynamic> that) =>
      wasmModule.wire_to_base64__method__VodozemacEd25519PublicKey(that);

  void wire_verify__method__VodozemacEd25519PublicKey(
          NativePortType port_, List<dynamic> that, String message, List<dynamic> signature) =>
      wasmModule.wire_verify__method__VodozemacEd25519PublicKey(port_, that, message, signature);

  dynamic /* List<dynamic> */ wire_from_slice__static_method__VodozemacCurve25519PublicKey(Uint8List bytes) =>
      wasmModule.wire_from_slice__static_method__VodozemacCurve25519PublicKey(bytes);

  dynamic /* Uint8List */ wire_as_bytes__method__VodozemacCurve25519PublicKey(List<dynamic> that) =>
      wasmModule.wire_as_bytes__method__VodozemacCurve25519PublicKey(that);

  dynamic /* List<dynamic> */ wire_from_base64__static_method__VodozemacCurve25519PublicKey(String base64_key) =>
      wasmModule.wire_from_base64__static_method__VodozemacCurve25519PublicKey(base64_key);

  dynamic /* String */ wire_to_base64__method__VodozemacCurve25519PublicKey(List<dynamic> that) =>
      wasmModule.wire_to_base64__method__VodozemacCurve25519PublicKey(that);

  dynamic /* int */ wire_message_type__method__VodozemacOlmMessage(List<dynamic> that) =>
      wasmModule.wire_message_type__method__VodozemacOlmMessage(that);

  dynamic /* String */ wire_message__method__VodozemacOlmMessage(List<dynamic> that) =>
      wasmModule.wire_message__method__VodozemacOlmMessage(that);

  dynamic /* List<dynamic> */ wire_from_parts__static_method__VodozemacOlmMessage(
          int message_type, String ciphertext) =>
      wasmModule.wire_from_parts__static_method__VodozemacOlmMessage(message_type, ciphertext);

  dynamic /* String */ wire_session_id__method__VodozemacSession(List<dynamic> that) =>
      wasmModule.wire_session_id__method__VodozemacSession(that);

  dynamic /* bool */ wire_has_received_message__method__VodozemacSession(List<dynamic> that) =>
      wasmModule.wire_has_received_message__method__VodozemacSession(that);

  void wire_encrypt__method__VodozemacSession(NativePortType port_, List<dynamic> that, String plaintext) =>
      wasmModule.wire_encrypt__method__VodozemacSession(port_, that, plaintext);

  void wire_decrypt__method__VodozemacSession(NativePortType port_, List<dynamic> that, List<dynamic> message) =>
      wasmModule.wire_decrypt__method__VodozemacSession(port_, that, message);

  void wire_pickle_encrypted__method__VodozemacSession(
          NativePortType port_, List<dynamic> that, Uint8List pickle_key) =>
      wasmModule.wire_pickle_encrypted__method__VodozemacSession(port_, that, pickle_key);

  void wire_from_pickle_encrypted__static_method__VodozemacSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_pickle_encrypted__static_method__VodozemacSession(port_, pickle, pickle_key);

  void wire_from_olm_pickle_encrypted__static_method__VodozemacSession(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_olm_pickle_encrypted__static_method__VodozemacSession(port_, pickle, pickle_key);

  void wire_session_config__method__VodozemacSession(NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_session_config__method__VodozemacSession(port_, that);

  void wire_new__static_method__VodozemacAccount(NativePortType port_) =>
      wasmModule.wire_new__static_method__VodozemacAccount(port_);

  dynamic /* int */ wire_max_number_of_one_time_keys__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_max_number_of_one_time_keys__method__VodozemacAccount(that);

  void wire_generate_fallback_key__method__VodozemacAccount(NativePortType port_, List<dynamic> that) =>
      wasmModule.wire_generate_fallback_key__method__VodozemacAccount(port_, that);

  dynamic /* bool */ wire_forget_fallback_key__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_forget_fallback_key__method__VodozemacAccount(that);

  void wire_generate_one_time_keys__method__VodozemacAccount(NativePortType port_, List<dynamic> that, int count) =>
      wasmModule.wire_generate_one_time_keys__method__VodozemacAccount(port_, that, count);

  dynamic /* void */ wire_mark_keys_as_published__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_mark_keys_as_published__method__VodozemacAccount(that);

  dynamic /* List<dynamic> */ wire_ed25519_key__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_ed25519_key__method__VodozemacAccount(that);

  dynamic /* List<dynamic> */ wire_curve25519_key__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_curve25519_key__method__VodozemacAccount(that);

  dynamic /* List<dynamic> */ wire_identity_keys__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_identity_keys__method__VodozemacAccount(that);

  dynamic /* List<dynamic> */ wire_one_time_keys__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_one_time_keys__method__VodozemacAccount(that);

  dynamic /* List<dynamic> */ wire_fallback_key__method__VodozemacAccount(List<dynamic> that) =>
      wasmModule.wire_fallback_key__method__VodozemacAccount(that);

  void wire_sign__method__VodozemacAccount(NativePortType port_, List<dynamic> that, String message) =>
      wasmModule.wire_sign__method__VodozemacAccount(port_, that, message);

  void wire_create_outbound_session__method__VodozemacAccount(NativePortType port_, List<dynamic> that,
          List<dynamic> config, List<dynamic> identity_key, List<dynamic> one_time_key) =>
      wasmModule.wire_create_outbound_session__method__VodozemacAccount(
          port_, that, config, identity_key, one_time_key);

  void wire_create_inbound_session__method__VodozemacAccount(
          NativePortType port_, List<dynamic> that, List<dynamic> their_identity_key, String pre_key_message_base64) =>
      wasmModule.wire_create_inbound_session__method__VodozemacAccount(
          port_, that, their_identity_key, pre_key_message_base64);

  void wire_pickle_encrypted__method__VodozemacAccount(
          NativePortType port_, List<dynamic> that, Uint8List pickle_key) =>
      wasmModule.wire_pickle_encrypted__method__VodozemacAccount(port_, that, pickle_key);

  void wire_from_pickle_encrypted__static_method__VodozemacAccount(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_pickle_encrypted__static_method__VodozemacAccount(port_, pickle, pickle_key);

  void wire_from_olm_pickle_encrypted__static_method__VodozemacAccount(
          NativePortType port_, String pickle, Uint8List pickle_key) =>
      wasmModule.wire_from_olm_pickle_encrypted__static_method__VodozemacAccount(port_, pickle, pickle_key);

  dynamic /*  */ drop_opaque_Curve25519PublicKey(ptr) => wasmModule.drop_opaque_Curve25519PublicKey(ptr);

  int /* *const c_void */ share_opaque_Curve25519PublicKey(ptr) => wasmModule.share_opaque_Curve25519PublicKey(ptr);

  dynamic /*  */ drop_opaque_Ed25519PublicKey(ptr) => wasmModule.drop_opaque_Ed25519PublicKey(ptr);

  int /* *const c_void */ share_opaque_Ed25519PublicKey(ptr) => wasmModule.share_opaque_Ed25519PublicKey(ptr);

  dynamic /*  */ drop_opaque_Ed25519Signature(ptr) => wasmModule.drop_opaque_Ed25519Signature(ptr);

  int /* *const c_void */ share_opaque_Ed25519Signature(ptr) => wasmModule.share_opaque_Ed25519Signature(ptr);

  dynamic /*  */ drop_opaque_MegolmSessionConfig(ptr) => wasmModule.drop_opaque_MegolmSessionConfig(ptr);

  int /* *const c_void */ share_opaque_MegolmSessionConfig(ptr) => wasmModule.share_opaque_MegolmSessionConfig(ptr);

  dynamic /*  */ drop_opaque_OlmMessage(ptr) => wasmModule.drop_opaque_OlmMessage(ptr);

  int /* *const c_void */ share_opaque_OlmMessage(ptr) => wasmModule.share_opaque_OlmMessage(ptr);

  dynamic /*  */ drop_opaque_OlmSessionConfig(ptr) => wasmModule.drop_opaque_OlmSessionConfig(ptr);

  int /* *const c_void */ share_opaque_OlmSessionConfig(ptr) => wasmModule.share_opaque_OlmSessionConfig(ptr);

  dynamic /*  */ drop_opaque_RwLockGroupSession(ptr) => wasmModule.drop_opaque_RwLockGroupSession(ptr);

  int /* *const c_void */ share_opaque_RwLockGroupSession(ptr) => wasmModule.share_opaque_RwLockGroupSession(ptr);

  dynamic /*  */ drop_opaque_RwLockInboundGroupSession(ptr) => wasmModule.drop_opaque_RwLockInboundGroupSession(ptr);

  int /* *const c_void */ share_opaque_RwLockInboundGroupSession(ptr) =>
      wasmModule.share_opaque_RwLockInboundGroupSession(ptr);

  dynamic /*  */ drop_opaque_RwLockSession(ptr) => wasmModule.drop_opaque_RwLockSession(ptr);

  int /* *const c_void */ share_opaque_RwLockSession(ptr) => wasmModule.share_opaque_RwLockSession(ptr);

  dynamic /*  */ drop_opaque_StdSyncRwLockAccount(ptr) => wasmModule.drop_opaque_StdSyncRwLockAccount(ptr);

  int /* *const c_void */ share_opaque_StdSyncRwLockAccount(ptr) => wasmModule.share_opaque_StdSyncRwLockAccount(ptr);
}
