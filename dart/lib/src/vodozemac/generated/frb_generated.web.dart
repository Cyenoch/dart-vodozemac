// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.9.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'api.dart';
import 'dart:async';
import 'dart:convert';
import 'frb_generated.dart';
import 'lib.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_Curve25519PublicKeyPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_Curve25519PublicKey;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_Ed25519PublicKeyPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_Ed25519PublicKey;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_Ed25519SignaturePtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_Ed25519Signature;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_MegolmSessionConfigPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_MegolmSessionConfig;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_OlmMessagePtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_OlmMessage;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_OlmSessionConfigPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_OlmSessionConfig;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RwLockGroupSessionPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_RwLockGroupSession;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RwLockInboundGroupSessionPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_RwLockInboundGroupSession;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RwLockSessionPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_RwLockSession;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_RwLockAccountPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockAccount;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  Curve25519PublicKey dco_decode_RustOpaque_Curve25519PublicKey(dynamic raw);

  @protected
  Ed25519PublicKey dco_decode_RustOpaque_Ed25519PublicKey(dynamic raw);

  @protected
  Ed25519Signature dco_decode_RustOpaque_Ed25519Signature(dynamic raw);

  @protected
  MegolmSessionConfig dco_decode_RustOpaque_MegolmSessionConfig(dynamic raw);

  @protected
  OlmMessage dco_decode_RustOpaque_OlmMessage(dynamic raw);

  @protected
  OlmSessionConfig dco_decode_RustOpaque_OlmSessionConfig(dynamic raw);

  @protected
  RwLockGroupSession dco_decode_RustOpaque_RwLockGroupSession(dynamic raw);

  @protected
  RwLockInboundGroupSession dco_decode_RustOpaque_RwLockInboundGroupSession(dynamic raw);

  @protected
  RwLockSession dco_decode_RustOpaque_RwLockSession(dynamic raw);

  @protected
  RwLockAccount dco_decode_RustOpaque_stdsyncRwLockAccount(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  VodozemacAccount dco_decode_box_autoadd_vodozemac_account(dynamic raw);

  @protected
  VodozemacCurve25519PublicKey dco_decode_box_autoadd_vodozemac_curve_25519_public_key(dynamic raw);

  @protected
  VodozemacEd25519PublicKey dco_decode_box_autoadd_vodozemac_ed_25519_public_key(dynamic raw);

  @protected
  VodozemacEd25519Signature dco_decode_box_autoadd_vodozemac_ed_25519_signature(dynamic raw);

  @protected
  VodozemacGroupSession dco_decode_box_autoadd_vodozemac_group_session(dynamic raw);

  @protected
  VodozemacInboundGroupSession dco_decode_box_autoadd_vodozemac_inbound_group_session(dynamic raw);

  @protected
  VodozemacMegolmSessionConfig dco_decode_box_autoadd_vodozemac_megolm_session_config(dynamic raw);

  @protected
  VodozemacOlmMessage dco_decode_box_autoadd_vodozemac_olm_message(dynamic raw);

  @protected
  VodozemacOlmSessionConfig dco_decode_box_autoadd_vodozemac_olm_session_config(dynamic raw);

  @protected
  VodozemacSession dco_decode_box_autoadd_vodozemac_session(dynamic raw);

  @protected
  DecryptResult dco_decode_decrypt_result(dynamic raw);

  @protected
  List<int> dco_decode_list_prim_u_8_loose(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  List<VodozemacOneTimeKey> dco_decode_list_vodozemac_one_time_key(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  U8Array32 dco_decode_u_8_array_32(dynamic raw);

  @protected
  U8Array64 dco_decode_u_8_array_64(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  VodozemacAccount dco_decode_vodozemac_account(dynamic raw);

  @protected
  VodozemacCurve25519PublicKey dco_decode_vodozemac_curve_25519_public_key(dynamic raw);

  @protected
  VodozemacEd25519PublicKey dco_decode_vodozemac_ed_25519_public_key(dynamic raw);

  @protected
  VodozemacEd25519Signature dco_decode_vodozemac_ed_25519_signature(dynamic raw);

  @protected
  VodozemacGroupSession dco_decode_vodozemac_group_session(dynamic raw);

  @protected
  VodozemacIdentityKeys dco_decode_vodozemac_identity_keys(dynamic raw);

  @protected
  VodozemacInboundGroupSession dco_decode_vodozemac_inbound_group_session(dynamic raw);

  @protected
  VodozemacMegolmSessionConfig dco_decode_vodozemac_megolm_session_config(dynamic raw);

  @protected
  VodozemacOlmMessage dco_decode_vodozemac_olm_message(dynamic raw);

  @protected
  VodozemacOlmSessionConfig dco_decode_vodozemac_olm_session_config(dynamic raw);

  @protected
  VodozemacOlmSessionCreationResult dco_decode_vodozemac_olm_session_creation_result(dynamic raw);

  @protected
  VodozemacOneTimeKey dco_decode_vodozemac_one_time_key(dynamic raw);

  @protected
  VodozemacSession dco_decode_vodozemac_session(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  Curve25519PublicKey sse_decode_RustOpaque_Curve25519PublicKey(SseDeserializer deserializer);

  @protected
  Ed25519PublicKey sse_decode_RustOpaque_Ed25519PublicKey(SseDeserializer deserializer);

  @protected
  Ed25519Signature sse_decode_RustOpaque_Ed25519Signature(SseDeserializer deserializer);

  @protected
  MegolmSessionConfig sse_decode_RustOpaque_MegolmSessionConfig(SseDeserializer deserializer);

  @protected
  OlmMessage sse_decode_RustOpaque_OlmMessage(SseDeserializer deserializer);

  @protected
  OlmSessionConfig sse_decode_RustOpaque_OlmSessionConfig(SseDeserializer deserializer);

  @protected
  RwLockGroupSession sse_decode_RustOpaque_RwLockGroupSession(SseDeserializer deserializer);

  @protected
  RwLockInboundGroupSession sse_decode_RustOpaque_RwLockInboundGroupSession(SseDeserializer deserializer);

  @protected
  RwLockSession sse_decode_RustOpaque_RwLockSession(SseDeserializer deserializer);

  @protected
  RwLockAccount sse_decode_RustOpaque_stdsyncRwLockAccount(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  VodozemacAccount sse_decode_box_autoadd_vodozemac_account(SseDeserializer deserializer);

  @protected
  VodozemacCurve25519PublicKey sse_decode_box_autoadd_vodozemac_curve_25519_public_key(SseDeserializer deserializer);

  @protected
  VodozemacEd25519PublicKey sse_decode_box_autoadd_vodozemac_ed_25519_public_key(SseDeserializer deserializer);

  @protected
  VodozemacEd25519Signature sse_decode_box_autoadd_vodozemac_ed_25519_signature(SseDeserializer deserializer);

  @protected
  VodozemacGroupSession sse_decode_box_autoadd_vodozemac_group_session(SseDeserializer deserializer);

  @protected
  VodozemacInboundGroupSession sse_decode_box_autoadd_vodozemac_inbound_group_session(SseDeserializer deserializer);

  @protected
  VodozemacMegolmSessionConfig sse_decode_box_autoadd_vodozemac_megolm_session_config(SseDeserializer deserializer);

  @protected
  VodozemacOlmMessage sse_decode_box_autoadd_vodozemac_olm_message(SseDeserializer deserializer);

  @protected
  VodozemacOlmSessionConfig sse_decode_box_autoadd_vodozemac_olm_session_config(SseDeserializer deserializer);

  @protected
  VodozemacSession sse_decode_box_autoadd_vodozemac_session(SseDeserializer deserializer);

  @protected
  DecryptResult sse_decode_decrypt_result(SseDeserializer deserializer);

  @protected
  List<int> sse_decode_list_prim_u_8_loose(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  List<VodozemacOneTimeKey> sse_decode_list_vodozemac_one_time_key(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  U8Array32 sse_decode_u_8_array_32(SseDeserializer deserializer);

  @protected
  U8Array64 sse_decode_u_8_array_64(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  VodozemacAccount sse_decode_vodozemac_account(SseDeserializer deserializer);

  @protected
  VodozemacCurve25519PublicKey sse_decode_vodozemac_curve_25519_public_key(SseDeserializer deserializer);

  @protected
  VodozemacEd25519PublicKey sse_decode_vodozemac_ed_25519_public_key(SseDeserializer deserializer);

  @protected
  VodozemacEd25519Signature sse_decode_vodozemac_ed_25519_signature(SseDeserializer deserializer);

  @protected
  VodozemacGroupSession sse_decode_vodozemac_group_session(SseDeserializer deserializer);

  @protected
  VodozemacIdentityKeys sse_decode_vodozemac_identity_keys(SseDeserializer deserializer);

  @protected
  VodozemacInboundGroupSession sse_decode_vodozemac_inbound_group_session(SseDeserializer deserializer);

  @protected
  VodozemacMegolmSessionConfig sse_decode_vodozemac_megolm_session_config(SseDeserializer deserializer);

  @protected
  VodozemacOlmMessage sse_decode_vodozemac_olm_message(SseDeserializer deserializer);

  @protected
  VodozemacOlmSessionConfig sse_decode_vodozemac_olm_session_config(SseDeserializer deserializer);

  @protected
  VodozemacOlmSessionCreationResult sse_decode_vodozemac_olm_session_creation_result(SseDeserializer deserializer);

  @protected
  VodozemacOneTimeKey sse_decode_vodozemac_one_time_key(SseDeserializer deserializer);

  @protected
  VodozemacSession sse_decode_vodozemac_session(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  String cst_encode_AnyhowException(AnyhowException raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    throw UnimplementedError();
  }

  @protected
  String cst_encode_String(String raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw;
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_account(VodozemacAccount raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_account(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_curve_25519_public_key(VodozemacCurve25519PublicKey raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_curve_25519_public_key(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_ed_25519_public_key(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_ed_25519_signature(VodozemacEd25519Signature raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_ed_25519_signature(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_group_session(VodozemacGroupSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_group_session(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_inbound_group_session(VodozemacInboundGroupSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_inbound_group_session(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_megolm_session_config(VodozemacMegolmSessionConfig raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_megolm_session_config(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_olm_message(VodozemacOlmMessage raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_olm_message(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_olm_session_config(VodozemacOlmSessionConfig raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_olm_session_config(raw);
  }

  @protected
  JSAny cst_encode_box_autoadd_vodozemac_session(VodozemacSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return cst_encode_vodozemac_session(raw);
  }

  @protected
  JSAny cst_encode_decrypt_result(DecryptResult raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.field0), cst_encode_u_32(raw.field1)].jsify()!;
  }

  @protected
  JSAny cst_encode_list_prim_u_8_loose(List<int> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.jsify()!;
  }

  @protected
  JSAny cst_encode_list_prim_u_8_strict(Uint8List raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.jsify()!;
  }

  @protected
  JSAny cst_encode_list_vodozemac_one_time_key(List<VodozemacOneTimeKey> raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw.map(cst_encode_vodozemac_one_time_key).toList().jsify()!;
  }

  @protected
  String? cst_encode_opt_String(String? raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return raw == null ? null : cst_encode_String(raw);
  }

  @protected
  JSAny cst_encode_u_8_array_32(U8Array32 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw).jsify()!;
  }

  @protected
  JSAny cst_encode_u_8_array_64(U8Array64 raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return Uint8List.fromList(raw).jsify()!;
  }

  @protected
  JSAny cst_encode_usize(BigInt raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return castNativeBigInt(raw);
  }

  @protected
  JSAny cst_encode_vodozemac_account(VodozemacAccount raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_stdsyncRwLockAccount(raw.account)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_curve_25519_public_key(VodozemacCurve25519PublicKey raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_Curve25519PublicKey(raw.key)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_Ed25519PublicKey(raw.key)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_ed_25519_signature(VodozemacEd25519Signature raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_Ed25519Signature(raw.signature)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_group_session(VodozemacGroupSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_RwLockGroupSession(raw.session)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_identity_keys(VodozemacIdentityKeys raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [
      cst_encode_vodozemac_ed_25519_public_key(raw.ed25519),
      cst_encode_vodozemac_curve_25519_public_key(raw.curve25519)
    ].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_inbound_group_session(VodozemacInboundGroupSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_RwLockInboundGroupSession(raw.session)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_megolm_session_config(VodozemacMegolmSessionConfig raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_MegolmSessionConfig(raw.config)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_olm_message(VodozemacOlmMessage raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_OlmMessage(raw.msg)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_olm_session_config(VodozemacOlmSessionConfig raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_OlmSessionConfig(raw.config)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_olm_session_creation_result(VodozemacOlmSessionCreationResult raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_vodozemac_session(raw.session), cst_encode_String(raw.plaintext)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_one_time_key(VodozemacOneTimeKey raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_String(raw.keyid), cst_encode_vodozemac_curve_25519_public_key(raw.key)].jsify()!;
  }

  @protected
  JSAny cst_encode_vodozemac_session(VodozemacSession raw) {
    // Codec=Cst (C-struct based), see doc to use other codecs
    return [cst_encode_RustOpaque_RwLockSession(raw.session)].jsify()!;
  }

  @protected
  int cst_encode_RustOpaque_Curve25519PublicKey(Curve25519PublicKey raw);

  @protected
  int cst_encode_RustOpaque_Ed25519PublicKey(Ed25519PublicKey raw);

  @protected
  int cst_encode_RustOpaque_Ed25519Signature(Ed25519Signature raw);

  @protected
  int cst_encode_RustOpaque_MegolmSessionConfig(MegolmSessionConfig raw);

  @protected
  int cst_encode_RustOpaque_OlmMessage(OlmMessage raw);

  @protected
  int cst_encode_RustOpaque_OlmSessionConfig(OlmSessionConfig raw);

  @protected
  int cst_encode_RustOpaque_RwLockGroupSession(RwLockGroupSession raw);

  @protected
  int cst_encode_RustOpaque_RwLockInboundGroupSession(RwLockInboundGroupSession raw);

  @protected
  int cst_encode_RustOpaque_RwLockSession(RwLockSession raw);

  @protected
  int cst_encode_RustOpaque_stdsyncRwLockAccount(RwLockAccount raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  void sse_encode_AnyhowException(AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_Curve25519PublicKey(Curve25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_Ed25519PublicKey(Ed25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_Ed25519Signature(Ed25519Signature self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_MegolmSessionConfig(MegolmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_OlmMessage(OlmMessage self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_OlmSessionConfig(OlmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockGroupSession(RwLockGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockInboundGroupSession(RwLockInboundGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_RwLockSession(RwLockSession self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_stdsyncRwLockAccount(RwLockAccount self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_account(VodozemacAccount self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_curve_25519_public_key(
      VodozemacCurve25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_ed_25519_signature(VodozemacEd25519Signature self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_group_session(VodozemacGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_inbound_group_session(
      VodozemacInboundGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_megolm_session_config(
      VodozemacMegolmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_olm_message(VodozemacOlmMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_olm_session_config(VodozemacOlmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_vodozemac_session(VodozemacSession self, SseSerializer serializer);

  @protected
  void sse_encode_decrypt_result(DecryptResult self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_loose(List<int> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_vodozemac_one_time_key(List<VodozemacOneTimeKey> self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_32(U8Array32 self, SseSerializer serializer);

  @protected
  void sse_encode_u_8_array_64(U8Array64 self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_account(VodozemacAccount self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_curve_25519_public_key(VodozemacCurve25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_ed_25519_public_key(VodozemacEd25519PublicKey self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_ed_25519_signature(VodozemacEd25519Signature self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_group_session(VodozemacGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_identity_keys(VodozemacIdentityKeys self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_inbound_group_session(VodozemacInboundGroupSession self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_megolm_session_config(VodozemacMegolmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_olm_message(VodozemacOlmMessage self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_olm_session_config(VodozemacOlmSessionConfig self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_olm_session_creation_result(
      VodozemacOlmSessionCreationResult self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_one_time_key(VodozemacOneTimeKey self, SseSerializer serializer);

  @protected
  void sse_encode_vodozemac_session(VodozemacSession self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void wire__crate__api__vodozemac_account_create_inbound_session(
          NativePortType port_, JSAny that, JSAny their_identity_key, String pre_key_message_base64) =>
      wasmModule.wire__crate__api__vodozemac_account_create_inbound_session(
          port_, that, their_identity_key, pre_key_message_base64);

  void wire__crate__api__vodozemac_account_create_outbound_session(
          NativePortType port_, JSAny that, JSAny config, JSAny identity_key, JSAny one_time_key) =>
      wasmModule.wire__crate__api__vodozemac_account_create_outbound_session(
          port_, that, config, identity_key, one_time_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_curve25519_key(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_curve25519_key(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */ wire__crate__api__vodozemac_account_ed25519_key(
          JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_account_ed25519_key(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_fallback_key(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_fallback_key(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_forget_fallback_key(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_forget_fallback_key(that);

  void wire__crate__api__vodozemac_account_from_olm_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_account_from_olm_pickle_encrypted(port_, pickle, pickle_key);

  void wire__crate__api__vodozemac_account_from_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_account_from_pickle_encrypted(port_, pickle, pickle_key);

  void wire__crate__api__vodozemac_account_generate_fallback_key(NativePortType port_, JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_account_generate_fallback_key(port_, that);

  void wire__crate__api__vodozemac_account_generate_one_time_keys(NativePortType port_, JSAny that, JSAny count) =>
      wasmModule.wire__crate__api__vodozemac_account_generate_one_time_keys(port_, that, count);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_identity_keys(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_identity_keys(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_mark_keys_as_published(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_mark_keys_as_published(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_max_number_of_one_time_keys(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_max_number_of_one_time_keys(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */ wire__crate__api__vodozemac_account_new() =>
      wasmModule.wire__crate__api__vodozemac_account_new();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_one_time_keys(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_account_one_time_keys(that);

  void wire__crate__api__vodozemac_account_pickle_encrypted(NativePortType port_, JSAny that, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_account_pickle_encrypted(port_, that, pickle_key);

  void wire__crate__api__vodozemac_account_sign(NativePortType port_, JSAny that, String message) =>
      wasmModule.wire__crate__api__vodozemac_account_sign(port_, that, message);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_as_bytes(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_curve_25519_public_key_as_bytes(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_from_base64(String base64_key) =>
          wasmModule.wire__crate__api__vodozemac_curve_25519_public_key_from_base64(base64_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_from_slice(JSAny bytes) =>
          wasmModule.wire__crate__api__vodozemac_curve_25519_public_key_from_slice(bytes);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_to_base64(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_curve_25519_public_key_to_base64(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_as_bytes(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_public_key_as_bytes(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_from_base64(String base64_key) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_public_key_from_base64(base64_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_from_slice(JSAny bytes) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_public_key_from_slice(bytes);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_to_base64(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_public_key_to_base64(that);

  void wire__crate__api__vodozemac_ed_25519_public_key_verify(
          NativePortType port_, JSAny that, String message, JSAny signature) =>
      wasmModule.wire__crate__api__vodozemac_ed_25519_public_key_verify(port_, that, message, signature);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_from_base64(String signature) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_signature_from_base64(signature);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_from_slice(JSAny bytes) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_signature_from_slice(bytes);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_to_base64(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_signature_to_base64(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_to_bytes(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_ed_25519_signature_to_bytes(that);

  void wire__crate__api__vodozemac_group_session_encrypt(NativePortType port_, JSAny that, String plaintext) =>
      wasmModule.wire__crate__api__vodozemac_group_session_encrypt(port_, that, plaintext);

  void wire__crate__api__vodozemac_group_session_from_olm_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_group_session_from_olm_pickle_encrypted(port_, pickle, pickle_key);

  void wire__crate__api__vodozemac_group_session_from_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_group_session_from_pickle_encrypted(port_, pickle, pickle_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_message_index(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_group_session_message_index(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */ wire__crate__api__vodozemac_group_session_new(
          JSAny config) =>
      wasmModule.wire__crate__api__vodozemac_group_session_new(config);

  void wire__crate__api__vodozemac_group_session_pickle_encrypted(NativePortType port_, JSAny that, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_group_session_pickle_encrypted(port_, that, pickle_key);

  void wire__crate__api__vodozemac_group_session_session_config(NativePortType port_, JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_group_session_session_config(port_, that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_session_id(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_group_session_session_id(that);

  void wire__crate__api__vodozemac_group_session_session_key(NativePortType port_, JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_group_session_session_key(port_, that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_to_inbound(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_group_session_to_inbound(that);

  void wire__crate__api__vodozemac_inbound_group_session_decrypt(NativePortType port_, JSAny that, String encrypted) =>
      wasmModule.wire__crate__api__vodozemac_inbound_group_session_decrypt(port_, that, encrypted);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_export_at(JSAny that, int index) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_export_at(that, index);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_export_at_first_known_index(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_export_at_first_known_index(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_first_known_index(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_first_known_index(that);

  void wire__crate__api__vodozemac_inbound_group_session_from_olm_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_inbound_group_session_from_olm_pickle_encrypted(port_, pickle, pickle_key);

  void wire__crate__api__vodozemac_inbound_group_session_from_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_inbound_group_session_from_pickle_encrypted(port_, pickle, pickle_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_import(String session_key, JSAny config) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_import(session_key, config);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_new(String session_key, JSAny config) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_new(session_key, config);

  void wire__crate__api__vodozemac_inbound_group_session_pickle_encrypted(
          NativePortType port_, JSAny that, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_inbound_group_session_pickle_encrypted(port_, that, pickle_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_session_id(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_inbound_group_session_session_id(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_def() =>
          wasmModule.wire__crate__api__vodozemac_megolm_session_config_def();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_megolm_session_config_version(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version_1() =>
          wasmModule.wire__crate__api__vodozemac_megolm_session_config_version_1();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version_2() =>
          wasmModule.wire__crate__api__vodozemac_megolm_session_config_version_2();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_message_from_parts(JSAny message_type, JSAny ciphertext) =>
          wasmModule.wire__crate__api__vodozemac_olm_message_from_parts(message_type, ciphertext);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */ wire__crate__api__vodozemac_olm_message_message(
          JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_olm_message_message(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_message_message_type(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_olm_message_message_type(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_def() =>
          wasmModule.wire__crate__api__vodozemac_olm_session_config_def();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_olm_session_config_version(that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version_1() =>
          wasmModule.wire__crate__api__vodozemac_olm_session_config_version_1();

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version_2() =>
          wasmModule.wire__crate__api__vodozemac_olm_session_config_version_2();

  void wire__crate__api__vodozemac_session_decrypt(NativePortType port_, JSAny that, JSAny message) =>
      wasmModule.wire__crate__api__vodozemac_session_decrypt(port_, that, message);

  void wire__crate__api__vodozemac_session_encrypt(NativePortType port_, JSAny that, String plaintext) =>
      wasmModule.wire__crate__api__vodozemac_session_encrypt(port_, that, plaintext);

  void wire__crate__api__vodozemac_session_from_olm_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_session_from_olm_pickle_encrypted(port_, pickle, pickle_key);

  void wire__crate__api__vodozemac_session_from_pickle_encrypted(
          NativePortType port_, String pickle, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_session_from_pickle_encrypted(port_, pickle, pickle_key);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_session_has_received_message(JSAny that) =>
          wasmModule.wire__crate__api__vodozemac_session_has_received_message(that);

  void wire__crate__api__vodozemac_session_pickle_encrypted(NativePortType port_, JSAny that, JSAny pickle_key) =>
      wasmModule.wire__crate__api__vodozemac_session_pickle_encrypted(port_, that, pickle_key);

  void wire__crate__api__vodozemac_session_session_config(NativePortType port_, JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_session_session_config(port_, that);

  JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */ wire__crate__api__vodozemac_session_session_id(
          JSAny that) =>
      wasmModule.wire__crate__api__vodozemac_session_session_id(that);

  void rust_arc_increment_strong_count_RustOpaque_Curve25519PublicKey(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_Curve25519PublicKey(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_Curve25519PublicKey(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_Curve25519PublicKey(ptr);

  void rust_arc_increment_strong_count_RustOpaque_Ed25519PublicKey(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_Ed25519PublicKey(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_Ed25519PublicKey(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_Ed25519PublicKey(ptr);

  void rust_arc_increment_strong_count_RustOpaque_Ed25519Signature(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_Ed25519Signature(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_Ed25519Signature(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_Ed25519Signature(ptr);

  void rust_arc_increment_strong_count_RustOpaque_MegolmSessionConfig(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_MegolmSessionConfig(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_MegolmSessionConfig(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_MegolmSessionConfig(ptr);

  void rust_arc_increment_strong_count_RustOpaque_OlmMessage(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_OlmMessage(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_OlmMessage(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_OlmMessage(ptr);

  void rust_arc_increment_strong_count_RustOpaque_OlmSessionConfig(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_OlmSessionConfig(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_OlmSessionConfig(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_OlmSessionConfig(ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockGroupSession(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_RwLockGroupSession(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockGroupSession(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_RwLockGroupSession(ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockInboundGroupSession(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_RwLockInboundGroupSession(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockInboundGroupSession(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_RwLockInboundGroupSession(ptr);

  void rust_arc_increment_strong_count_RustOpaque_RwLockSession(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_RwLockSession(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_RwLockSession(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_RwLockSession(ptr);

  void rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockAccount(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockAccount(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockAccount(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockAccount(ptr);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {
  external void wire__crate__api__vodozemac_account_create_inbound_session(
      NativePortType port_, JSAny that, JSAny their_identity_key, String pre_key_message_base64);

  external void wire__crate__api__vodozemac_account_create_outbound_session(
      NativePortType port_, JSAny that, JSAny config, JSAny identity_key, JSAny one_time_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_curve25519_key(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_ed25519_key(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_fallback_key(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_forget_fallback_key(JSAny that);

  external void wire__crate__api__vodozemac_account_from_olm_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external void wire__crate__api__vodozemac_account_from_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external void wire__crate__api__vodozemac_account_generate_fallback_key(NativePortType port_, JSAny that);

  external void wire__crate__api__vodozemac_account_generate_one_time_keys(
      NativePortType port_, JSAny that, JSAny count);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_identity_keys(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_mark_keys_as_published(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_max_number_of_one_time_keys(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_new();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_account_one_time_keys(JSAny that);

  external void wire__crate__api__vodozemac_account_pickle_encrypted(
      NativePortType port_, JSAny that, JSAny pickle_key);

  external void wire__crate__api__vodozemac_account_sign(NativePortType port_, JSAny that, String message);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_as_bytes(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_from_base64(String base64_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_from_slice(JSAny bytes);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_curve_25519_public_key_to_base64(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_as_bytes(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_from_base64(String base64_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_from_slice(JSAny bytes);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_public_key_to_base64(JSAny that);

  external void wire__crate__api__vodozemac_ed_25519_public_key_verify(
      NativePortType port_, JSAny that, String message, JSAny signature);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_from_base64(String signature);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_from_slice(JSAny bytes);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_to_base64(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_ed_25519_signature_to_bytes(JSAny that);

  external void wire__crate__api__vodozemac_group_session_encrypt(NativePortType port_, JSAny that, String plaintext);

  external void wire__crate__api__vodozemac_group_session_from_olm_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external void wire__crate__api__vodozemac_group_session_from_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_message_index(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_new(JSAny config);

  external void wire__crate__api__vodozemac_group_session_pickle_encrypted(
      NativePortType port_, JSAny that, JSAny pickle_key);

  external void wire__crate__api__vodozemac_group_session_session_config(NativePortType port_, JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_session_id(JSAny that);

  external void wire__crate__api__vodozemac_group_session_session_key(NativePortType port_, JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_group_session_to_inbound(JSAny that);

  external void wire__crate__api__vodozemac_inbound_group_session_decrypt(
      NativePortType port_, JSAny that, String encrypted);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_export_at(JSAny that, int index);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_export_at_first_known_index(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_first_known_index(JSAny that);

  external void wire__crate__api__vodozemac_inbound_group_session_from_olm_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external void wire__crate__api__vodozemac_inbound_group_session_from_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_import(String session_key, JSAny config);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_new(String session_key, JSAny config);

  external void wire__crate__api__vodozemac_inbound_group_session_pickle_encrypted(
      NativePortType port_, JSAny that, JSAny pickle_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_inbound_group_session_session_id(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_def();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version_1();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_megolm_session_config_version_2();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_message_from_parts(JSAny message_type, JSAny ciphertext);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_message_message(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_message_message_type(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_def();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version(JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version_1();

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_olm_session_config_version_2();

  external void wire__crate__api__vodozemac_session_decrypt(NativePortType port_, JSAny that, JSAny message);

  external void wire__crate__api__vodozemac_session_encrypt(NativePortType port_, JSAny that, String plaintext);

  external void wire__crate__api__vodozemac_session_from_olm_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external void wire__crate__api__vodozemac_session_from_pickle_encrypted(
      NativePortType port_, String pickle, JSAny pickle_key);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_session_has_received_message(JSAny that);

  external void wire__crate__api__vodozemac_session_pickle_encrypted(
      NativePortType port_, JSAny that, JSAny pickle_key);

  external void wire__crate__api__vodozemac_session_session_config(NativePortType port_, JSAny that);

  external JSAny? /* flutter_rust_bridge::for_generated::WireSyncRust2DartDco */
      wire__crate__api__vodozemac_session_session_id(JSAny that);

  external void rust_arc_increment_strong_count_RustOpaque_Curve25519PublicKey(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_Curve25519PublicKey(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_Ed25519PublicKey(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_Ed25519PublicKey(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_Ed25519Signature(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_Ed25519Signature(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_MegolmSessionConfig(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_MegolmSessionConfig(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_OlmMessage(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_OlmMessage(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_OlmSessionConfig(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_OlmSessionConfig(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_RwLockGroupSession(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_RwLockGroupSession(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_RwLockInboundGroupSession(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_RwLockInboundGroupSession(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_RwLockSession(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_RwLockSession(int ptr);

  external void rust_arc_increment_strong_count_RustOpaque_stdsyncRwLockAccount(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_stdsyncRwLockAccount(int ptr);
}
